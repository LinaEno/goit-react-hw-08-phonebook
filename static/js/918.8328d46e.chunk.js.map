{"version":3,"file":"static/js/918.8328d46e.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.jsx","components/ContactForm/Form.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","hoc/WithAuthRedirect.jsx","pages/ContactPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  color: ${p => p.theme.colors.mainText};\n  font-size: ${p => p.theme.fontSizes.l};\n  display: block;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-top: ${p => p.theme.space[4]}px;\n  margin-bottom: ${p => p.theme.space[5]}px;\n  color: ${p => p.theme.colors.mainText};\n  background-color: ${p => p.theme.colors.background};\n  outline: none;\n  border-color: ${p => p.theme.colors.borderBtn};\n  width: 478px;\n  height: 40px;\n  border-radius: ${p => p.theme.borders.borderRadius}px;\n  font-size: ${p => p.theme.fontSizes.l};\n  padding-left: ${p => p.theme.space[4]}px;\n  &:hover,\n  &:focus {\n    border-color: ${p => p.theme.colors.btnBg};\n  }\n`;\n","import { useState } from 'react';\nimport { Button } from 'components/ContactList/ContactList.styled';\nimport { Label, Input } from 'components/Filter/Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') {\n      setName(value);\n    } else {\n      setNumber(value);\n    }\n  };\n  //\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const sameContact = contacts.some(\n      contact =>\n        contact.name.toLowerCase() === name.toLowerCase() ||\n        contact.number === number\n    );\n\n    if (sameContact) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form autoComplete=\"off\" onSubmit={handleSubmit}>\n      <Label htmlFor=\"name\">\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </Label>\n      <Label htmlFor=\"number\">\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </form>\n  );\n}\n","import { Contact, Button } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filterContact = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filterContact.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <ul>\n      {visibleContacts.map(({ name, id, number }) => {\n        return (\n          <Contact key={id}>\n            {name}: {number}\n            <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n              Delete\n            </Button>\n          </Contact>\n        );\n      })}\n    </ul>\n  );\n};\n","import { Label, Input } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/contactsSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nconst Filter = () => {\n  const filterContact = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        value={filterContact}\n        onChange={e => dispatch(setFilter(e.target.value))}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { selectIsLoggedIn, selectRefreshed } from 'redux/auth/authSelectors';\n\nfunction WithAuthRedirect(Component, navigateTo) {\n  const ProtectedComponent = props => {\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n    const isRefreshing = useSelector(selectRefreshed);\n\n    return isLoggedIn && !isRefreshing ? (\n      <Component {...props} />\n    ) : (\n      <Navigate to={navigateTo} />\n    );\n  };\n\n  return ProtectedComponent;\n}\n\nexport default WithAuthRedirect;\n","import { Container, MainTitle, Message, Title } from 'components/App.styled';\nimport Form from 'components/ContactForm/Form';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  getError,\n  getIsLoading,\n  selectContacts,\n} from 'redux/contacts/selectors';\nimport WithAuthRedirect from 'hoc/WithAuthRedirect';\nimport { getUserName } from 'redux/auth/authSelectors';\n\nconst ContactPage = () => {\n  const contacts = useSelector(selectContacts);\n  const loading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n  const user = useSelector(getUserName);\n\n  useEffect(() => {\n    if (user === null) return;\n    dispatch(fetchContacts());\n  }, [dispatch, user]);\n\n  useEffect(() => {\n    if (error) {\n      toast.error('Oops. Something went wrong 😭');\n    }\n  }, [error]);\n  return (\n    <Container>\n      <MainTitle>Phonebook</MainTitle>\n      <Form />\n      <Title>Contacts</Title>\n      {contacts.length === 0 ? (\n        <Message>There is no contacts</Message>\n      ) : (\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      )}\n      {loading && <Loader />}\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={5000}\n        closeOnClick\n        theme=\"colored\"\n      />\n    </Container>\n  );\n};\n\nconst ProtectedContactsPage = WithAuthRedirect(ContactPage, '/login');\n\nexport default ProtectedContactsPage;\n"],"names":["Label","styled","p","theme","colors","mainText","fontSizes","l","Input","space","background","borderBtn","borders","borderRadius","btnBg","Form","useState","name","setName","number","setNumber","dispatch","useDispatch","contacts","useSelector","selectContacts","handleChange","e","target","value","autoComplete","onSubmit","preventDefault","some","contact","toLowerCase","alert","addContact","htmlFor","I","type","pattern","title","required","onChange","ContactList","filterContact","selectFilter","visibleContacts","normalizedFilter","filter","includes","getVisibleContacts","map","id","onClick","deleteContact","setFilter","Component","navigateTo","props","isLoggedIn","selectIsLoggedIn","isRefreshing","selectRefreshed","to","WithAuthRedirect","loading","getIsLoading","error","getError","user","getUserName","useEffect","fetchContacts","toast","length","Loader","position","autoClose","closeOnClick"],"sourceRoot":""}