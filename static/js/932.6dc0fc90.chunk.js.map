{"version":3,"file":"static/js/932.6dc0fc90.chunk.js","mappings":"yNAEaA,EAAQC,EAAAA,EAAAA,MAAH,6EACP,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,QAAnB,IACG,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,UAAUC,CAAtB,IAIHC,EAAQP,EAAAA,EAAAA,MAAH,uUAEF,SAAAC,GAAC,OAAIA,EAAEC,MAAMM,MAAM,EAAlB,IACE,SAAAP,GAAC,OAAIA,EAAEC,MAAMM,MAAM,EAAlB,IACT,SAAAP,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,QAAnB,IACU,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOM,UAAnB,IAEL,SAAAR,GAAC,OAAIA,EAAEC,MAAMC,OAAOO,SAAnB,IAGA,SAAAT,GAAC,OAAIA,EAAEC,MAAMS,QAAQC,YAApB,IACL,SAAAX,GAAC,OAAIA,EAAEC,MAAMG,UAAUC,CAAtB,IACE,SAAAL,GAAC,OAAIA,EAAEC,MAAMM,MAAM,EAAlB,IAGC,SAAAP,GAAC,OAAIA,EAAEC,MAAMC,OAAOU,KAAnB,G,2KCdN,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IAEzB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,MAEAC,EAAAA,EAAAA,YAAU,WACK,OAATV,GAAeF,EAAS,YAC7B,GAAE,CAACE,EAAMF,IAEV,IAAMa,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUR,EAAoB,EAApBA,KAAMS,EAAc,EAAdA,MACtC,OAAQT,GACN,IAAK,OACH,OAAOC,EAAQQ,GACjB,IAAK,QACH,OAAON,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,OAEL,EAUD,OACE,UAAC,KAAD,YACE,SAAC,KAAD,4BAEA,kBAAMC,SAZW,SAAAC,GACnBA,EAAEC,iBACFpB,GAASqB,EAAAA,EAAAA,IAAa,CAAEb,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACrCH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAMiCS,aAAa,MAA3C,WACE,UAAC,IAAD,mBAEE,SAAC,EAAAC,EAAD,CAAOC,KAAK,OAAOhB,KAAK,OAAOS,MAAOT,EAAMiB,SAAUV,QAGxD,UAAC,IAAD,qBAEE,SAAC,EAAAQ,EAAD,CACEC,KAAK,QACLhB,KAAK,QACLS,MAAOP,EACPe,SAAUV,QAId,UAAC,IAAD,uBAEE,SAAC,EAAAQ,EAAD,CACEC,KAAK,WACLhB,KAAK,WACLS,MAAOL,EACPa,SAAUV,QAId,SAAC,IAAD,CAAQS,KAAK,SAAb,+BAIP,C","sources":["components/Filter/Filter.styled.jsx","pages/RegistrationPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  color: ${p => p.theme.colors.mainText};\n  font-size: ${p => p.theme.fontSizes.l};\n  display: block;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-top: ${p => p.theme.space[4]}px;\n  margin-bottom: ${p => p.theme.space[5]}px;\n  color: ${p => p.theme.colors.mainText};\n  background-color: ${p => p.theme.colors.background};\n  outline: none;\n  border-color: ${p => p.theme.colors.borderBtn};\n  width: 478px;\n  height: 40px;\n  border-radius: ${p => p.theme.borders.borderRadius}px;\n  font-size: ${p => p.theme.fontSizes.l};\n  padding-left: ${p => p.theme.space[4]}px;\n  &:hover,\n  &:focus {\n    border-color: ${p => p.theme.colors.btnBg};\n  }\n`;\n","import { Container, Title } from 'components/App.styled';\nimport { Button } from 'components/ContactList/ContactList.styled';\nimport { Input, Label } from 'components/Filter/Filter.styled';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { registration } from 'redux/auth/authOperation';\nimport { getUserName } from 'redux/auth/authSelectors';\n\nexport default function RegistrationPage() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const user = useSelector(getUserName);\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  useEffect(() => {\n    if (user !== null) navigate('/contacts');\n  }, [user, navigate]);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(registration({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Container>\n      <Title>Registration</Title>\n\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <Label>\n          Name\n          <Input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </Label>\n\n        <Label>\n          E-mail\n          <Input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </Label>\n\n        <Label>\n          Password\n          <Input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </Label>\n\n        <Button type=\"submit\">Registration</Button>\n      </form>\n    </Container>\n  );\n}\n"],"names":["Label","styled","p","theme","colors","mainText","fontSizes","l","Input","space","background","borderBtn","borders","borderRadius","btnBg","RegistrationPage","dispatch","useDispatch","navigate","useNavigate","user","useSelector","getUserName","useState","name","setName","email","setEmail","password","setPassword","useEffect","handleChange","target","value","onSubmit","e","preventDefault","registration","autoComplete","I","type","onChange"],"sourceRoot":""}